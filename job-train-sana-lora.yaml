apiVersion: batch/v1
kind: Job
metadata:
  generateName: ${USER}-job-train-${JOB_SUFFIX}
  labels:
    eidf/user: ${USER}
    kueue.x-k8s.io/queue-name: ${QUEUE_NAME}
    kueue.x-k8s.io/priority-class: batch-workload-priority
spec:
  completions: 1
  parallelism: 1
  completionMode: Indexed
  backoffLimit: 6
  activeDeadlineSeconds: 864000
  ttlSecondsAfterFinished: 2592000
  template:
    metadata:
      labels:
        eidf/user: ${USER}
    spec:
      restartPolicy: OnFailure
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nvidia.com/gpu.product
                    operator: In
                    values:
                      # - NVIDIA-H200
                      - NVIDIA-A100-SXM4-80GB
                      # - NVIDIA-H100
      tolerations:
        - key: "eidf098"
          operator: "Equal"
          value: "True"
          effect: "NoSchedule"
        - key: "eidf107"
          operator: "Equal"
          value: "True"
          effect: "NoSchedule"
      containers:
        - name: open-cv-pytorch
          image: demisto/opencv:1.0.0.2034788
          workingDir: "/workspace/Sana"
          env:
            # --- START ADDITION ---
            - name: TZ
              value: "Etc/UTC"
            # --- END ADDITION ---
            - name: DEBIAN_FRONTEND # Keep this one too!
              value: "noninteractive"
            - name: TORCH_NCCL_ASYNC_ERROR_HANDLING
              value: "1"
            - name: NCCL_DEBUG
              value: "INFO"
            - name: NCCL_IB_DISABLE
              value: "1"
            - name: MAX_DELTA
              value: "${MAX_DELTA}"
            - name: NCCL_IB_HCA
              value: "^mlx5"
            - name: PYTHONPATH
              value: "/workspace/Sana"
          command: ["/bin/bash", "-c"]
          args:
            - |-
              
              # Run apt update and install with -y and noninteractive frontend
              apt update && apt install -y --no-install-recommends \
                  wget \
                  git \
                  unzip \
                  zip \
                  libgl1 \
                  libglib2.0-0 \
                  ffmpeg \
                  tzdata \ # Explicitly install tzdata if needed \
                  cmake \
                  libgl1-mesa-glx \
                  libsm6 \
                  libxext6 \
                  libfontconfig1 \
                  libxrender1
              
              apt list --installed | grep libgl1
              
              DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends git ca-certificates
              echo "Git installed"
              echo "Changing branch to eidf"
              git checkout eidf

              echo "Copying files to /pvc"
              mkdir -p /pvc/Sana/
              cp -r /workspace/Sana/* /pvc/Sana
              cd /pvc/Sana
              ls /pvc/
              pwd

              # Clean up apt cache
              rm -rf /var/lib/apt/lists/*
              
              # python -m pip install --upgrade pip setuptools wheel

              echo "Setting up environment..."
              export PYTHONPATH=$PYTHONPATH:/pvc/Sana/
              echo "Python Path"
              echo $PYTHONPATH

              echo "Installing other dependencies..."
              chmod +x environment_setup.sh
              ./environment_setup.sh

              pip install pandas
              pip install pyrallis

              pip install -U "huggingface_hub[cli]"
              echo "Logging in to Hugging Face..."
              chmod 600 /pvc/hf_token.txt
              chmod +x scripts/hf-login.sh
              ./scripts/hf-login.sh

              echo "Running training script..."
              # chmod +x train_scripts/train_lora.sh
              # bash train_scripts/train_lora.sh > logs_sana_lora.txt 2>&1
              
              # chmod +x train_scripts/train.sh
              # bash train_scripts/train.sh > logs_sana.txt 2>&1

              sleep infinity

              chmod +x train_scripts/train.sh
              bash train_scripts/train.sh > logs_sana600M_1024.txt 2>&1

          resources:
            limits:
              nvidia.com/gpu: "4"
              cpu: "8"
              memory: "96Gi"
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: writeable
              mountPath: /pvc
            - name: dshm
              mountPath: /dev/shm
      volumes:
        - name: workspace
          nfs:
            server: 10.24.6.77
            path: /user/s2198939-eidf107
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 64Gi
        - name: writeable
          persistentVolumeClaim:
            claimName: mimic-cxr2